// generated by Fast Light User Interface Designer (fluid) version 1.0107

#ifndef fltkClippingPlane3DDrawerGUI_h
#define fltkClippingPlane3DDrawerGUI_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <itkObject.h>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Value_Output.H>
#include <FL/Fl_Value_Input.H>
#include <FL/Fl_Adjuster.H>

class fltkClippingPlane3DDrawerGUI : public itk::Object {
public:
  fltkClippingPlane3DDrawerGUI();
  Fl_Double_Window *clippingWindow;
  Fl_Check_Button *enableCheckButton;
private:
  void cb_enableCheckButton_i(Fl_Check_Button*, void*);
  static void cb_enableCheckButton(Fl_Check_Button*, void*);
public:
  Fl_Value_Output *rValueOutput;
  Fl_Value_Input *xValueInput;
private:
  void cb_xValueInput_i(Fl_Value_Input*, void*);
  static void cb_xValueInput(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *yValueInput;
private:
  void cb_yValueInput_i(Fl_Value_Input*, void*);
  static void cb_yValueInput(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *zValueInput;
private:
  void cb_zValueInput_i(Fl_Value_Input*, void*);
  static void cb_zValueInput(Fl_Value_Input*, void*);
public:
  Fl_Adjuster *rAdjuster;
private:
  void cb_rAdjuster_i(Fl_Adjuster*, void*);
  static void cb_rAdjuster(Fl_Adjuster*, void*);
public:
  ~fltkClippingPlane3DDrawerGUI();
  virtual void Show(void);
  virtual void Hide(void);
  virtual void UpdateFromGUI(void);
  virtual void SetLabel( const char * label );
};
#endif
