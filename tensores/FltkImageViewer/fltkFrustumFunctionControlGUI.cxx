// generated by Fast Light User Interface Designer (fluid) version 1.0107

#include "C:/Documents and Settings/ruben/Escritorio/UsimagTool_clean/FltkImageViewer/fltkFrustumFunctionControlGUI.h"

void fltkFrustumFunctionControlGUI::cb_xAdjuster_i(Fl_Adjuster* o, void*) {
  SetApexX( o->value() );
}
void fltkFrustumFunctionControlGUI::cb_xAdjuster(Fl_Adjuster* o, void* v) {
  ((fltkFrustumFunctionControlGUI*)(o->parent()->user_data()))->cb_xAdjuster_i(o,v);
}

void fltkFrustumFunctionControlGUI::cb_yAdjuster_i(Fl_Adjuster* o, void*) {
  SetApexY( o->value() );
}
void fltkFrustumFunctionControlGUI::cb_yAdjuster(Fl_Adjuster* o, void* v) {
  ((fltkFrustumFunctionControlGUI*)(o->parent()->user_data()))->cb_yAdjuster_i(o,v);
}

void fltkFrustumFunctionControlGUI::cb_zAdjuster_i(Fl_Adjuster* o, void*) {
  SetApexZ( o->value() );
}
void fltkFrustumFunctionControlGUI::cb_zAdjuster(Fl_Adjuster* o, void* v) {
  ((fltkFrustumFunctionControlGUI*)(o->parent()->user_data()))->cb_zAdjuster_i(o,v);
}

void fltkFrustumFunctionControlGUI::cb_angleZRoller_i(Fl_Roller* o, void*) {
  SetAngleZ( o->value() );
}
void fltkFrustumFunctionControlGUI::cb_angleZRoller(Fl_Roller* o, void* v) {
  ((fltkFrustumFunctionControlGUI*)(o->parent()->user_data()))->cb_angleZRoller_i(o,v);
}

void fltkFrustumFunctionControlGUI::cb_apertureAngleXRoller_i(Fl_Roller* o, void*) {
  SetApertureAngleX( o->value() );
}
void fltkFrustumFunctionControlGUI::cb_apertureAngleXRoller(Fl_Roller* o, void* v) {
  ((fltkFrustumFunctionControlGUI*)(o->parent()->user_data()))->cb_apertureAngleXRoller_i(o,v);
}

void fltkFrustumFunctionControlGUI::cb_apertureAngleYRoller_i(Fl_Roller* o, void*) {
  SetApertureAngleY( o->value() );
}
void fltkFrustumFunctionControlGUI::cb_apertureAngleYRoller(Fl_Roller* o, void* v) {
  ((fltkFrustumFunctionControlGUI*)(o->parent()->user_data()))->cb_apertureAngleYRoller_i(o,v);
}

void fltkFrustumFunctionControlGUI::cb_topPlaneAdjuster_i(Fl_Adjuster* o, void*) {
  SetTopPlane( o->value() );
}
void fltkFrustumFunctionControlGUI::cb_topPlaneAdjuster(Fl_Adjuster* o, void* v) {
  ((fltkFrustumFunctionControlGUI*)(o->parent()->user_data()))->cb_topPlaneAdjuster_i(o,v);
}

void fltkFrustumFunctionControlGUI::cb_bottomPlaneAdjuster_i(Fl_Adjuster* o, void*) {
  SetBottomPlane( o->value() );
}
void fltkFrustumFunctionControlGUI::cb_bottomPlaneAdjuster(Fl_Adjuster* o, void* v) {
  ((fltkFrustumFunctionControlGUI*)(o->parent()->user_data()))->cb_bottomPlaneAdjuster_i(o,v);
}

fltkFrustumFunctionControlGUI::fltkFrustumFunctionControlGUI() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = controlWindow = new Fl_Double_Window(313, 252, "Frustum Function Controls");
    w = o;
    o->user_data((void*)(this));
    { Fl_Value_Output* o = angleZValueOutput = new Fl_Value_Output(233, 18, 55, 20);
      o->value(10);
    }
    { Fl_Adjuster* o = xAdjuster = new Fl_Adjuster(105, 114, 130, 20, "X  ");
      o->labelsize(12);
      o->minimum(-500);
      o->maximum(500);
      o->step(0.001);
      o->callback((Fl_Callback*)cb_xAdjuster);
      o->align(FL_ALIGN_LEFT);
    }
    xValueOutput = new Fl_Value_Output(235, 114, 55, 20);
    { Fl_Adjuster* o = yAdjuster = new Fl_Adjuster(105, 134, 130, 20, "Y  ");
      o->labelsize(12);
      o->minimum(-500);
      o->maximum(500);
      o->step(0.001);
      o->callback((Fl_Callback*)cb_yAdjuster);
      o->align(FL_ALIGN_LEFT);
    }
    yValueOutput = new Fl_Value_Output(235, 134, 55, 20);
    { Fl_Adjuster* o = zAdjuster = new Fl_Adjuster(105, 154, 130, 20, "Z  ");
      o->labelsize(12);
      o->minimum(-500);
      o->maximum(500);
      o->step(0.001);
      o->callback((Fl_Callback*)cb_zAdjuster);
      o->align(FL_ALIGN_LEFT);
    }
    zValueOutput = new Fl_Value_Output(235, 154, 55, 20);
    new Fl_Box(93, 89, 150, 25, "Apex Coordinates");
    { Fl_Roller* o = angleZRoller = new Fl_Roller(98, 18, 135, 20, "Angle     Z  ");
      o->type(1);
      o->minimum(-180);
      o->maximum(180);
      o->step(0.1);
      o->value(10);
      o->callback((Fl_Callback*)cb_angleZRoller);
      o->align(FL_ALIGN_LEFT);
    }
    { Fl_Roller* o = apertureAngleXRoller = new Fl_Roller(98, 40, 135, 20, "Aperture X  ");
      o->type(1);
      o->maximum(90);
      o->step(0.1);
      o->value(10);
      o->callback((Fl_Callback*)cb_apertureAngleXRoller);
      o->align(FL_ALIGN_LEFT);
    }
    { Fl_Value_Output* o = apertureAngleXValueOutput = new Fl_Value_Output(233, 40, 55, 20);
      o->value(10);
    }
    { Fl_Roller* o = apertureAngleYRoller = new Fl_Roller(98, 62, 135, 20, "Aperture Y  ");
      o->type(1);
      o->maximum(90);
      o->step(0.1);
      o->value(10);
      o->callback((Fl_Callback*)cb_apertureAngleYRoller);
      o->align(FL_ALIGN_LEFT);
    }
    { Fl_Value_Output* o = apertureAngleYValueOutput = new Fl_Value_Output(233, 62, 55, 20);
      o->value(10);
    }
    { Fl_Adjuster* o = topPlaneAdjuster = new Fl_Adjuster(105, 195, 130, 20, "Top Plane ");
      o->labelsize(12);
      o->minimum(-500);
      o->maximum(500);
      o->step(0.001);
      o->callback((Fl_Callback*)cb_topPlaneAdjuster);
      o->align(FL_ALIGN_LEFT);
    }
    topPlaneValueOutput = new Fl_Value_Output(235, 195, 55, 20);
    bottomPlaneValueOutput = new Fl_Value_Output(235, 215, 55, 20);
    { Fl_Adjuster* o = bottomPlaneAdjuster = new Fl_Adjuster(105, 215, 130, 20, "Bottom Plane ");
      o->labelsize(12);
      o->minimum(-500);
      o->maximum(500);
      o->step(0.001);
      o->callback((Fl_Callback*)cb_bottomPlaneAdjuster);
      o->align(FL_ALIGN_LEFT);
    }
    o->end();
  }
}

fltkFrustumFunctionControlGUI::~fltkFrustumFunctionControlGUI() {
}

void fltkFrustumFunctionControlGUI::SetAngleZ( double radius ) {
  angleZRoller->value( radius );
angleZValueOutput->value( radius );
}

void fltkFrustumFunctionControlGUI::SetApexX( double x ) {
  xAdjuster->value( x );
xValueOutput->value( x );
}

void fltkFrustumFunctionControlGUI::SetApexY( double y ) {
  yAdjuster->value( y );
yValueOutput->value( y );
}

void fltkFrustumFunctionControlGUI::SetApexZ( double z ) {
  zAdjuster->value( z );
zValueOutput->value( z );
}

void fltkFrustumFunctionControlGUI::Show(void) {
  controlWindow->show();
}

void fltkFrustumFunctionControlGUI::Hide(void) {
  controlWindow->hide();
}

void fltkFrustumFunctionControlGUI::SetApertureAngleX( double radius ) {
  apertureAngleXRoller->value( radius );
apertureAngleXValueOutput->value( radius );
}

void fltkFrustumFunctionControlGUI::SetApertureAngleY( double radius ) {
  apertureAngleYRoller->value( radius );
apertureAngleYValueOutput->value( radius );
}

void fltkFrustumFunctionControlGUI::SetBottomPlane( double radius ) {
  bottomPlaneAdjuster->value( radius );
bottomPlaneValueOutput->value( radius );
}

void fltkFrustumFunctionControlGUI::SetTopPlane( double radius ) {
  topPlaneAdjuster->value( radius );
topPlaneValueOutput->value( radius );
}
