// generated by Fast Light User Interface Designer (fluid) version 1.0107

#include "fltkSphereFunctionControlGUI.h"

void fltkSphereFunctionControlGUI::cb_radiusAdjuster_i(Fl_Adjuster* o, void*) {
  SetRadius( o->value() );
}
void fltkSphereFunctionControlGUI::cb_radiusAdjuster(Fl_Adjuster* o, void* v) {
  ((fltkSphereFunctionControlGUI*)(o->parent()->user_data()))->cb_radiusAdjuster_i(o,v);
}

void fltkSphereFunctionControlGUI::cb_xAdjuster_i(Fl_Adjuster* o, void*) {
  SetCenterX( o->value() );
}
void fltkSphereFunctionControlGUI::cb_xAdjuster(Fl_Adjuster* o, void* v) {
  ((fltkSphereFunctionControlGUI*)(o->parent()->user_data()))->cb_xAdjuster_i(o,v);
}

void fltkSphereFunctionControlGUI::cb_yAdjuster_i(Fl_Adjuster* o, void*) {
  SetCenterY( o->value() );
}
void fltkSphereFunctionControlGUI::cb_yAdjuster(Fl_Adjuster* o, void* v) {
  ((fltkSphereFunctionControlGUI*)(o->parent()->user_data()))->cb_yAdjuster_i(o,v);
}

void fltkSphereFunctionControlGUI::cb_zAdjuster_i(Fl_Adjuster* o, void*) {
  SetCenterZ( o->value() );
}
void fltkSphereFunctionControlGUI::cb_zAdjuster(Fl_Adjuster* o, void* v) {
  ((fltkSphereFunctionControlGUI*)(o->parent()->user_data()))->cb_zAdjuster_i(o,v);
}

fltkSphereFunctionControlGUI::fltkSphereFunctionControlGUI() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = controlWindow = new Fl_Double_Window(235, 144, "Sphere Function Controls");
    w = o;
    o->user_data((void*)(this));
    { Fl_Adjuster* o = radiusAdjuster = new Fl_Adjuster(30, 20, 130, 20, "Radius  ");
      o->labelsize(12);
      o->minimum(1);
      o->maximum(100);
      o->step(0.001);
      o->value(10);
      o->callback((Fl_Callback*)cb_radiusAdjuster);
      o->align(FL_ALIGN_TOP);
    }
    { Fl_Value_Output* o = radiusValueOutput = new Fl_Value_Output(160, 20, 55, 20);
      o->value(10);
    }
    { Fl_Adjuster* o = xAdjuster = new Fl_Adjuster(32, 66, 130, 20, "X  ");
      o->labelsize(12);
      o->minimum(-500);
      o->maximum(500);
      o->step(0.001);
      o->callback((Fl_Callback*)cb_xAdjuster);
      o->align(FL_ALIGN_LEFT);
    }
    xValueOutput = new Fl_Value_Output(162, 66, 55, 20);
    { Fl_Adjuster* o = yAdjuster = new Fl_Adjuster(32, 86, 130, 20, "Y  ");
      o->labelsize(12);
      o->minimum(-500);
      o->maximum(500);
      o->step(0.001);
      o->callback((Fl_Callback*)cb_yAdjuster);
      o->align(FL_ALIGN_LEFT);
    }
    yValueOutput = new Fl_Value_Output(162, 86, 55, 20);
    { Fl_Adjuster* o = zAdjuster = new Fl_Adjuster(32, 106, 130, 20, "Z  ");
      o->labelsize(12);
      o->minimum(-500);
      o->maximum(500);
      o->step(0.001);
      o->callback((Fl_Callback*)cb_zAdjuster);
      o->align(FL_ALIGN_LEFT);
    }
    zValueOutput = new Fl_Value_Output(162, 106, 55, 20);
    new Fl_Box(65, 45, 60, 25, "Center");
    o->end();
  }
}

fltkSphereFunctionControlGUI::~fltkSphereFunctionControlGUI() {
}

void fltkSphereFunctionControlGUI::SetRadius( double radius ) {
  radiusAdjuster->value( radius );
radiusValueOutput->value( radius );
}

void fltkSphereFunctionControlGUI::SetCenterX( double x ) {
  xAdjuster->value( x );
xValueOutput->value( x );
}

void fltkSphereFunctionControlGUI::SetCenterY( double y ) {
  yAdjuster->value( y );
yValueOutput->value( y );
}

void fltkSphereFunctionControlGUI::SetCenterZ( double z ) {
  zAdjuster->value( z );
zValueOutput->value( z );
}

void fltkSphereFunctionControlGUI::Show(void) {
  controlWindow->show();
}

void fltkSphereFunctionControlGUI::Hide(void) {
  controlWindow->hide();
}
